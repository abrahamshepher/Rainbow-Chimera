{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = ({\n  strings,\n  typeSpeed = 100,\n  backspaceSpeed = 50,\n  delayBeforeStart = 1000,\n  // delay before typing starts\n  delayAfterCompletion = 1000 // delay after typing before backspacing\n}) => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [arrayIndex, setArrayIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  useEffect(() => {\n    const handleTyping = () => {\n      if (arrayIndex >= strings.length) {\n        setArrayIndex(0);\n        return;\n      }\n\n      // Determine the current speed\n      let currentSpeed = isDeleting ? backspaceSpeed : typeSpeed;\n\n      // Handling the deleting effect\n      if (isDeleting) {\n        setText(prev => prev.substring(0, prev.length - 1));\n        setCharIndex(prev => prev - 1);\n      }\n\n      // Handling the typing effect\n      if (!isDeleting && charIndex < strings[arrayIndex].length) {\n        setText(prev => prev + strings[arrayIndex].charAt(charIndex));\n        setCharIndex(prev => prev + 1);\n      }\n\n      // Handle the transition from typing to deleting\n      if (!isDeleting && charIndex === strings[arrayIndex].length) {\n        setTimeout(() => setIsDeleting(true), delayAfterCompletion);\n        return;\n      }\n\n      // Handle cycling to the next string\n      if (isDeleting && charIndex === 0) {\n        setIsDeleting(false);\n        setArrayIndex(prev => (prev + 1) % strings.length);\n        return;\n      }\n\n      // Schedule the next text update\n      setTimeout(handleTyping, currentSpeed);\n    };\n\n    // Initialize the typing effect after the initial delay\n    const timerId = setTimeout(handleTyping, delayBeforeStart);\n\n    // Cleanup the timeout if the component unmounts\n    return () => clearTimeout(timerId);\n  }, [arrayIndex, charIndex, isDeleting, strings, typeSpeed, backspaceSpeed, delayBeforeStart, delayAfterCompletion]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: text\n  }, void 0, false);\n};\n_s(TypingAnimation, \"4+q8Aj1CSvGdpSvnRIcUD01vaso=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","TypingAnimation","strings","typeSpeed","backspaceSpeed","delayBeforeStart","delayAfterCompletion","_s","text","setText","arrayIndex","setArrayIndex","charIndex","setCharIndex","isDeleting","setIsDeleting","handleTyping","length","currentSpeed","prev","substring","charAt","setTimeout","timerId","clearTimeout","children","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/I/Test/frontend/src/components/TypingAnimation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst TypingAnimation = ({\r\n  strings,\r\n  typeSpeed = 100,\r\n  backspaceSpeed = 50,\r\n  delayBeforeStart = 1000, // delay before typing starts\r\n  delayAfterCompletion = 1000, // delay after typing before backspacing\r\n}) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [arrayIndex, setArrayIndex] = useState(0);\r\n  const [charIndex, setCharIndex] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleTyping = () => {\r\n      if (arrayIndex >= strings.length) {\r\n        setArrayIndex(0);\r\n        return;\r\n      }\r\n\r\n      // Determine the current speed\r\n      let currentSpeed = isDeleting ? backspaceSpeed : typeSpeed;\r\n\r\n      // Handling the deleting effect\r\n      if (isDeleting) {\r\n        setText((prev) => prev.substring(0, prev.length - 1));\r\n        setCharIndex((prev) => prev - 1);\r\n      }\r\n\r\n      // Handling the typing effect\r\n      if (!isDeleting && charIndex < strings[arrayIndex].length) {\r\n        setText((prev) => prev + strings[arrayIndex].charAt(charIndex));\r\n        setCharIndex((prev) => prev + 1);\r\n      }\r\n\r\n      // Handle the transition from typing to deleting\r\n      if (!isDeleting && charIndex === strings[arrayIndex].length) {\r\n        setTimeout(() => setIsDeleting(true), delayAfterCompletion);\r\n        return;\r\n      }\r\n\r\n      // Handle cycling to the next string\r\n      if (isDeleting && charIndex === 0) {\r\n        setIsDeleting(false);\r\n        setArrayIndex((prev) => (prev + 1) % strings.length);\r\n        return;\r\n      }\r\n\r\n      // Schedule the next text update\r\n      setTimeout(handleTyping, currentSpeed);\r\n    };\r\n\r\n    // Initialize the typing effect after the initial delay\r\n    const timerId = setTimeout(handleTyping, delayBeforeStart);\r\n\r\n    // Cleanup the timeout if the component unmounts\r\n    return () => clearTimeout(timerId);\r\n  }, [\r\n    arrayIndex,\r\n    charIndex,\r\n    isDeleting,\r\n    strings,\r\n    typeSpeed,\r\n    backspaceSpeed,\r\n    delayBeforeStart,\r\n    delayAfterCompletion,\r\n  ]);\r\n\r\n  return <>{text}</>;\r\n};\r\n\r\nexport default TypingAnimation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAC;EACvBC,OAAO;EACPC,SAAS,GAAG,GAAG;EACfC,cAAc,GAAG,EAAE;EACnBC,gBAAgB,GAAG,IAAI;EAAE;EACzBC,oBAAoB,GAAG,IAAI,CAAE;AAC/B,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMqB,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIN,UAAU,IAAIR,OAAO,CAACe,MAAM,EAAE;QAChCN,aAAa,CAAC,CAAC,CAAC;QAChB;MACF;;MAEA;MACA,IAAIO,YAAY,GAAGJ,UAAU,GAAGV,cAAc,GAAGD,SAAS;;MAE1D;MACA,IAAIW,UAAU,EAAE;QACdL,OAAO,CAAEU,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC,CAAC,EAAED,IAAI,CAACF,MAAM,GAAG,CAAC,CAAC,CAAC;QACrDJ,YAAY,CAAEM,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAClC;;MAEA;MACA,IAAI,CAACL,UAAU,IAAIF,SAAS,GAAGV,OAAO,CAACQ,UAAU,CAAC,CAACO,MAAM,EAAE;QACzDR,OAAO,CAAEU,IAAI,IAAKA,IAAI,GAAGjB,OAAO,CAACQ,UAAU,CAAC,CAACW,MAAM,CAACT,SAAS,CAAC,CAAC;QAC/DC,YAAY,CAAEM,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAClC;;MAEA;MACA,IAAI,CAACL,UAAU,IAAIF,SAAS,KAAKV,OAAO,CAACQ,UAAU,CAAC,CAACO,MAAM,EAAE;QAC3DK,UAAU,CAAC,MAAMP,aAAa,CAAC,IAAI,CAAC,EAAET,oBAAoB,CAAC;QAC3D;MACF;;MAEA;MACA,IAAIQ,UAAU,IAAIF,SAAS,KAAK,CAAC,EAAE;QACjCG,aAAa,CAAC,KAAK,CAAC;QACpBJ,aAAa,CAAEQ,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIjB,OAAO,CAACe,MAAM,CAAC;QACpD;MACF;;MAEA;MACAK,UAAU,CAACN,YAAY,EAAEE,YAAY,CAAC;IACxC,CAAC;;IAED;IACA,MAAMK,OAAO,GAAGD,UAAU,CAACN,YAAY,EAAEX,gBAAgB,CAAC;;IAE1D;IACA,OAAO,MAAMmB,YAAY,CAACD,OAAO,CAAC;EACpC,CAAC,EAAE,CACDb,UAAU,EACVE,SAAS,EACTE,UAAU,EACVZ,OAAO,EACPC,SAAS,EACTC,cAAc,EACdC,gBAAgB,EAChBC,oBAAoB,CACrB,CAAC;EAEF,oBAAON,OAAA,CAAAF,SAAA;IAAA2B,QAAA,EAAGjB;EAAI,gBAAG,CAAC;AACpB,CAAC;AAACD,EAAA,CApEIN,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAsErB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}