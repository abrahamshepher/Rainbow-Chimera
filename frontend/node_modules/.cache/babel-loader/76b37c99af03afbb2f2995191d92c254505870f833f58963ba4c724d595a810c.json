{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = ({\n  strings,\n  typeSpeed = 100,\n  delay = 1000\n}) => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [arrayIndex, setArrayIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  useEffect(() => {\n    if (arrayIndex >= strings.length) {\n      setArrayIndex(0);\n      return;\n    }\n    if (charIndex < strings[arrayIndex].length) {\n      setTimeout(() => {\n        setText(prev => prev + strings[arrayIndex].charAt(charIndex));\n        setCharIndex(prev => prev + 1);\n      }, typeSpeed);\n    } else {\n      setTimeout(() => {\n        setText(\"\");\n        setCharIndex(0);\n        setArrayIndex(prev => (prev + 1) % strings.length);\n      }, delay);\n    }\n  }, [text, charIndex, arrayIndex, strings, typeSpeed, delay]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: text\n  }, void 0, false);\n};\n_s(TypingAnimation, \"envtXjNGmPMqTvNjjMSVEWTdoh8=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","TypingAnimation","strings","typeSpeed","delay","_s","text","setText","arrayIndex","setArrayIndex","charIndex","setCharIndex","length","setTimeout","prev","charAt","children","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/ClaimCracker/frontend/Rainbow-Chimera/src/components/TypingAnimation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst TypingAnimation = ({ strings, typeSpeed = 100, delay = 1000 }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [arrayIndex, setArrayIndex] = useState(0);\r\n  const [charIndex, setCharIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (arrayIndex >= strings.length) {\r\n      setArrayIndex(0);\r\n      return;\r\n    }\r\n\r\n    if (charIndex < strings[arrayIndex].length) {\r\n      setTimeout(() => {\r\n        setText((prev) => prev + strings[arrayIndex].charAt(charIndex));\r\n        setCharIndex((prev) => prev + 1);\r\n      }, typeSpeed);\r\n    } else {\r\n      setTimeout(() => {\r\n        setText(\"\");\r\n        setCharIndex(0);\r\n        setArrayIndex((prev) => (prev + 1) % strings.length);\r\n      }, delay);\r\n    }\r\n  }, [text, charIndex, arrayIndex, strings, typeSpeed, delay]);\r\n\r\n  return <>{text}</>;\r\n};\r\n\r\nexport default TypingAnimation;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,OAAO;EAAEC,SAAS,GAAG,GAAG;EAAEC,KAAK,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,IAAIa,UAAU,IAAIN,OAAO,CAACU,MAAM,EAAE;MAChCH,aAAa,CAAC,CAAC,CAAC;MAChB;IACF;IAEA,IAAIC,SAAS,GAAGR,OAAO,CAACM,UAAU,CAAC,CAACI,MAAM,EAAE;MAC1CC,UAAU,CAAC,MAAM;QACfN,OAAO,CAAEO,IAAI,IAAKA,IAAI,GAAGZ,OAAO,CAACM,UAAU,CAAC,CAACO,MAAM,CAACL,SAAS,CAAC,CAAC;QAC/DC,YAAY,CAAEG,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAClC,CAAC,EAAEX,SAAS,CAAC;IACf,CAAC,MAAM;MACLU,UAAU,CAAC,MAAM;QACfN,OAAO,CAAC,EAAE,CAAC;QACXI,YAAY,CAAC,CAAC,CAAC;QACfF,aAAa,CAAEK,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIZ,OAAO,CAACU,MAAM,CAAC;MACtD,CAAC,EAAER,KAAK,CAAC;IACX;EACF,CAAC,EAAE,CAACE,IAAI,EAAEI,SAAS,EAAEF,UAAU,EAAEN,OAAO,EAAEC,SAAS,EAAEC,KAAK,CAAC,CAAC;EAE5D,oBAAOJ,OAAA,CAAAF,SAAA;IAAAkB,QAAA,EAAGV;EAAI,gBAAG,CAAC;AACpB,CAAC;AAACD,EAAA,CA1BIJ,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AA4BrB,eAAeA,eAAe;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}