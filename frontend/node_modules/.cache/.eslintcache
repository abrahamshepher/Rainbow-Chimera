[{"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\index.js":"1","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\App.js":"2","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\pages\\HomePage.js":"3","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\Footer.js":"4","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\CheckedClaim.js":"5","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\Statistics.js":"6","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\Navbar.js":"7","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\ArticlesSection.js":"8","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\FlowSection.js":"9","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\Hero.js":"10","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\ModelWorking.js":"11","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\TypingAnimation.js":"12","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\constants\\Image.js":"13","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\constants\\NavButtons.js":"14","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\ParticlesBackground.js":"15"},{"size":265,"mtime":1700918895521,"results":"16","hashOfConfig":"17"},{"size":187,"mtime":1700918895021,"results":"18","hashOfConfig":"17"},{"size":716,"mtime":1700929145305,"results":"19","hashOfConfig":"17"},{"size":506,"mtime":1700929488764,"results":"20","hashOfConfig":"17"},{"size":2500,"mtime":1700928441071,"results":"21","hashOfConfig":"17"},{"size":1533,"mtime":1700929355553,"results":"22","hashOfConfig":"17"},{"size":4843,"mtime":1700929518949,"results":"23","hashOfConfig":"17"},{"size":3910,"mtime":1700928396106,"results":"24","hashOfConfig":"17"},{"size":2363,"mtime":1700928938191,"results":"25","hashOfConfig":"17"},{"size":2676,"mtime":1700918895506,"results":"26","hashOfConfig":"17"},{"size":3993,"mtime":1700929329708,"results":"27","hashOfConfig":"17"},{"size":2133,"mtime":1700918895515,"results":"28","hashOfConfig":"17"},{"size":164,"mtime":1700918895516,"results":"29","hashOfConfig":"17"},{"size":250,"mtime":1700918895516,"results":"30","hashOfConfig":"17"},{"size":2179,"mtime":1700923632531,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10mke7d",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\index.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\App.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\pages\\HomePage.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\Footer.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\CheckedClaim.js",["83"],[],"import React from \"react\";\r\n\r\nfunction CheckedClaim() {\r\n  const data = [\r\n    {\r\n      image: \"./1.jpg\",\r\n      heading:\r\n        \"The Researcher's Toolkit: Essential Skills for Effective Studies\",\r\n      details: \"Dummy text\",\r\n    },\r\n    {\r\n      image: \"./15.jpg\",\r\n      heading:\r\n        \"Navigating the World of Peer-Reviewed Journals: A Guide for Researchers\",\r\n      details: \"Dummy text\",\r\n    },\r\n    {\r\n      image: \"./10.jpg\",\r\n      heading: \"From Hypothesis to Conclusion: Mastering the Research Process\",\r\n      details: \"Dummy text\",\r\n    },\r\n    {\r\n      image: \"./11.jpg\",\r\n      heading:\r\n        \"Big Data and Beyond: The Evolution of Research in the Digital Age\",\r\n      details: \"Dummy text\",\r\n    },\r\n    {\r\n      image: \"./12.jpg\",\r\n      heading: \"The Power of Interdisciplinary Research: Breaking Down Silos\",\r\n      details: \"Dummy text\",\r\n    },\r\n    {\r\n      image: \"./14.jpg\",\r\n      heading: \"The Role of Research in Solving Real-World Problems\",\r\n      details: \"Dummy text\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {/* Div containing Rows */}\r\n      <div\r\n        className=\"flex flex-wrap  w-[100%]  py-[4%] items-center justify-center sm:flex-auto flex-auto  mt-[5%]\"\r\n        id=\"claims\"\r\n      >\r\n        {data.map((item, ind) => {\r\n          return (\r\n            <>\r\n              <div className=\"flex  relative flex-wrap items-center justify-center  p-10  lg:w-[40%] xl:w-[30%] sm:w-full w-full\">\r\n                {/* FirstCard */}\r\n                <a\r\n                  href=\"#\"\r\n                  class=\"flex flex-col items-center bg-white border border-gray-300 rounded-lg shadow md:flex-row md:max-w-xl hover:bg-gray-200 \"\r\n                >\r\n                  <img\r\n                    class=\"object-cover w-full rounded-t-lg h-96 md:h-auto md:w-48 md:rounded-none md:rounded-l-lg\"\r\n                    src={item.image}\r\n                    alt=\"\"\r\n                  />\r\n                  <div class=\"flex flex-col justify-between p-4 leading-normal\">\r\n                    <h5 class=\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-black\">\r\n                      {item.heading}\r\n                    </h5>\r\n                    <p class=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">\r\n                      {item.details}\r\n                    </p>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckedClaim;\r\n","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\Statistics.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\Navbar.js",["84","85","86","87","88","89","90","91"],[],"import React, { useState } from \"react\";\r\nimport NavButtons from \"../constants/NavButtons\";\r\n\r\nfunction Navbar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const scrollToSection = (event, sectionId, offset) => {\r\n    event.preventDefault();\r\n    const section = document.getElementById(sectionId);\r\n    if (section) {\r\n      console.log(section);\r\n      section.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <nav className=\"fixed w-full  bg-[#A23FF4] p-4 opacity-50 z-50\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <a\r\n            className=\"flex ml-10 items-center\"\r\n            href=\"/\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            <img src=\"/logo.jpg\" width={\"50px\"} alt=\"\" />\r\n            <span className=\"  lg:ml-3 lg:text-xl lg:text-white lg:cursor-pointer\">\r\n              <p className=\" hidden sm:hidden md:hidden lg:block text-xl\">\r\n                ClaimCracker\r\n              </p>\r\n            </span>\r\n          </a>\r\n\r\n          <div className=\"hidden lg:flex lg:justify-center lg:m-auto lg:gap-10  space-x-4\">\r\n            <a href=\"#\" className=\"text-white text-xl hover:text-gray-300\">\r\n              <NavButtons\r\n                ButtonText=\"Home\"\r\n                onClick={(event) => scrollToSection(event, \"hero\", 200)}\r\n              />\r\n            </a>\r\n            {/* <a href=\"#\" className=\"text-white   text-xl hover:text-gray-300\">\r\n              <NavButtons\r\n                ButtonText=\"Articles\"\r\n                onClick={(event) => scrollToSection(event, \"flow\", 200)}\r\n              />\r\n            </a> */}\r\n            <a href=\"#\" className=\"text-white  text-xl hover:text-gray-300\">\r\n              <NavButtons\r\n                ButtonText=\"Blogs\"\r\n                onClick={(event) => scrollToSection(event, \"articles\", 200)}\r\n              />\r\n            </a>\r\n            {/* <a href=\"#\" className=\"text-white  text-xl hover:text-gray-300\">\r\n              <NavButtons\r\n                ButtonText=\"Features\"\r\n                onClick={(event) => scrollToSection(event, \"model\", 200)}\r\n              />\r\n            </a> */}\r\n            <a href=\"#\" className=\"text-white text-xl hover:text-gray-300\">\r\n              <NavButtons\r\n                ButtonText=\"Model\"\r\n                onClick={(event) => scrollToSection(event, \"model\", 200)}\r\n              />\r\n            </a>\r\n            <a href=\"#\" className=\"text-white text-xl hover:text-gray-300\">\r\n              <NavButtons\r\n                ButtonText=\"About Us\"\r\n                onClick={(event) => scrollToSection(event, \"flow\", 200)}\r\n              />\r\n            </a>\r\n          </div>\r\n          {/* Hamburger Icon */}\r\n          <div className=\"lg:hidden\">\r\n            <button\r\n              onClick={toggleMenu}\r\n              className=\"flex items-center px-3 py-2 text-white\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M4 6h16M4 12h16M4 18h16\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Dropdown Menu */}\r\n        {isOpen && (\r\n          <div className=\"lg:hidden absolute right-0 mt-2 py-2 px-4 bg-purple-600 border border-violet-200 rounded-lg shadow-lg text-white\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"block mt-2 text-black-500 hover:text-black-400\"\r\n            >\r\n              <NavButtons\r\n                ButtonText=\"Home\"\r\n                onClick={(event) => scrollToSection(event, \"hero\", 200)}\r\n              />\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              className=\"block mt-2 text-black-500 hover:text-black-400\"\r\n            >\r\n              <NavButtons ButtonText=\"Updates\" onClick={() => {}} />\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              className=\"block mt-2 text-black-500 hover:text-black-400\"\r\n            >\r\n              <NavButtons ButtonText=\"Get involved \" onClick={() => {}} />\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              className=\"block mt-2 text-black-500 hover:text-black-400\"\r\n            >\r\n              <NavButtons ButtonText=\"Get involved \" onClick={() => {}} />\r\n            </a>\r\n          </div>\r\n        )}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\ArticlesSection.js",["92","93","94"],[],"import React from \"react\";\r\n\r\nfunction ArticlesSection() {\r\n  const data = [\r\n    {\r\n      image: \"./3.jpg\",\r\n      heading:\r\n        \"Research in the Post-Pandemic Era: Challenges and Opportunities\",\r\n      details:\r\n        \"Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.\",\r\n    },\r\n    {\r\n      image: \"./4.jpg\",\r\n      heading: \"The Role of Citizen Science: Engaging the Public in Research\",\r\n      details:\r\n        \"Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.\",\r\n    },\r\n    {\r\n      image: \"./5.jpg\",\r\n      heading:\r\n        \"Research Funding in a Competitive Landscape: Strategies for Success\",\r\n      details:\r\n        \"Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.\",\r\n    },\r\n    {\r\n      image: \"./6.jpg\",\r\n      heading: \"Science Communication: Sharing Your Research with the World\",\r\n      details:\r\n        \"Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.\",\r\n    },\r\n    {\r\n      image: \"./7.jpg\",\r\n      heading:\r\n        \"Research in the Age of AI: Machine Learning's Impact on Scientific Discovery\",\r\n      details:\r\n        \"Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.\",\r\n    },\r\n    {\r\n      image: \"./8.jpg\",\r\n      heading:\r\n        \"Staying Organized: Tips for Managing Research Projects Successfully\",\r\n      details:\r\n        \"Here are the biggest enterprise technology acquisitions of 2021 so far, in reverse chronological order.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\" flex flex-wrap relative    items-center justify-center  w-[100%] mt-[5%] \"\r\n      id=\"articles\"\r\n    >\r\n      {/* first row */}\r\n      {data.map((i, ind) => {\r\n        return (\r\n          <>\r\n            <div className=\"  flex  flex-wrap  lg:w-[30%] p-6  xl:w-[30%] sm:w-full w-full mt-[5%]\">\r\n              <div className=\"    justify-around flex \">\r\n                {/* First Card */}\r\n\r\n                <div class=\" bg-white border border-gray-300  shadow-lg\">\r\n                  <a href=\"#\">\r\n                    <img class=\"rounded-t-lg\" src={i.image} alt=\"\" />\r\n                  </a>\r\n                  <div class=\"p-5\">\r\n                    <a href=\"#\">\r\n                      <h5 class=\"mb-2 text-2xl font-bold tracking-tight text-black \">\r\n                        {i.heading}\r\n                      </h5>\r\n                    </a>\r\n                    <p class=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">\r\n                      {i.details}\r\n                    </p>\r\n                    <a\r\n                      href=\"#\"\r\n                      class=\"inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                    >\r\n                      Read more\r\n                      <svg\r\n                        class=\"w-3.5 h-3.5 ml-2\"\r\n                        aria-hidden=\"true\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 14 10\"\r\n                      >\r\n                        <path\r\n                          stroke=\"currentColor\"\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                          stroke-width=\"2\"\r\n                          d=\"M1 5h12m0 0L9 1m4 4L9 9\"\r\n                        />\r\n                      </svg>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArticlesSection;\r\n","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\FlowSection.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\Hero.js",["95","96","97"],[],"import React, { useState } from \"react\";\r\nimport { MagnifyingGlassIcon } from \"@heroicons/react/24/solid\";\r\nimport ParticlesBackground from \"./ParticlesBackground\";\r\nimport TypingAnimation from \"./TypingAnimation\";\r\n\r\nfunction Hero() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [prediction, setPrediction] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const handleSearchSubmit = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:8000/api/classifier/predict/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ text: searchText }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      setPrediction(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching prediction:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"flex h-screen text-gray-600 body-font bg-gradient-to-r from-violet-500 to-fuchsia-500 relative\">\r\n        <ParticlesBackground />\r\n        <div\r\n          className=\"container mx-auto flex px-5 py-24 items-center justify-center flex-col\"\r\n          id=\"hero\"\r\n        >\r\n          <div className=\"text-center lg:w-2/3 w-full\">\r\n            <h1 className=\"title-font sm:text-8xl text-4xl mb-4 font-medium text-white\">\r\n              Find out the truth!\r\n            </h1>\r\n            <p className=\"leading-relaxed mb-8 text-white\">\r\n              ClaimCracker provides a way to quickly find out about the\r\n              truthfulness of the claims made by\r\n              <br />\r\n              <TypingAnimation\r\n                className=\"md:text-5xl sm:text-4xl text-xl font-bold md:pl-4 pl-2\"\r\n                strings={[\"Politicians\", \"Celebrities\", \"Influencers\"]}\r\n                typeSpeed={120}\r\n                delay={2000}\r\n              />\r\n            </p>\r\n            <div className=\"relative justify-center max-[1000px]:w-[100%] w-[100%]\">\r\n              <div className=\"relative text-left\">\r\n                <input\r\n                  className=\"w-[100%] p-[5%] flex bg-inherit border-white rounded-full focus:outline-none text-sm py-3 text-white placeholder-white border-[1px]\"\r\n                  type=\"text\"\r\n                  placeholder={\"  Search\"}\r\n                />\r\n                <MagnifyingGlassIcon className=\"absolute w-8 right-[15px] top-0 text-white group-hover:bg-gray-200 h-full flex items-center justify-center\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\ModelWorking.js",["98","99"],[],"import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport Image from \"../constants/Image\";\r\nfunction ModelWorking() {\r\n  const CardsData = [\r\n    {\r\n      image: (\r\n        <Image\r\n          alt=\"Image 1\"\r\n          width={40}\r\n          height={40}\r\n          dataNimg={1}\r\n          className=\"w-full h-full object-contain object-center\"\r\n          src=\"/images/4.svg\"\r\n        />\r\n      ),\r\n      title: \"Easy Searching\",\r\n      text: \"Effortlessly find people using fields like name, department, and job title with OrgFlow's powerful search features.\",\r\n    },\r\n    {\r\n      image: (\r\n        <Image\r\n          alt=\"Image 2\"\r\n          width={40}\r\n          height={40}\r\n          dataNimg={1}\r\n          className=\"w-full h-full object-contain object-center\"\r\n          src=\"/images/2.svg\"\r\n        />\r\n      ),\r\n\r\n      title: \"Microsoft's Card\",\r\n      text: \"Connect, collaborate, and gather information easily with Microsoft's User Card integrated with OrgFlow.\",\r\n    },\r\n    {\r\n      image: (\r\n        <Image\r\n          alt=\"Image 3\"\r\n          width={40}\r\n          height={40}\r\n          dataNimg={1}\r\n          className=\"w-full h-full object-contain object-center\"\r\n          src=\"/images/3.svg\"\r\n        />\r\n      ),\r\n\r\n      title: \"Seamless Charts\",\r\n      text: \"Create, visualize, and export organizational charts as image or Excel files with OrgFlow's versatile capabilities.\",\r\n    },\r\n\r\n    {\r\n      image: (\r\n        <Image\r\n          alt=\"Image 4\"\r\n          width={40}\r\n          height={40}\r\n          dataNimg={1}\r\n          className=\"w-full h-full object-contain object-center\"\r\n          src=\"/images/1.svg\"\r\n        />\r\n      ),\r\n      title: \"Highly Customizable\",\r\n      text: \"Tailor your organizational charts to perfection with OrgFlow's robust customization options. \",\r\n    },\r\n\r\n    {\r\n      image: (\r\n        <Image\r\n          alt=\"Image 5\"\r\n          width={40}\r\n          height={40}\r\n          dataNimg={1}\r\n          className=\"w-full h-full object-contain object-center\"\r\n          src=\"/images/5.svg\"\r\n        />\r\n      ),\r\n\r\n      title: \"Team Visualization\",\r\n      text: \"Create, visualize, and export organizational charts as image or Excel files with OrgFlow's versatile capabilities.\",\r\n    },\r\n\r\n    {\r\n      image: (\r\n        <Image\r\n          alt=\"Image 6\"\r\n          width={40}\r\n          height={40}\r\n          dataNimg={1}\r\n          className=\"w-full h-full object-contain object-center\"\r\n          src=\"/images/6.svg\"\r\n        />\r\n      ),\r\n\r\n      title: \"Team Collaboration\",\r\n      text: \"Create, visualize, and export organizational charts as image or Excel files with OrgFlow's versatile capabilities.\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"relative  p-[8%] z-10\" id=\"model\">\r\n      <h1 className=\" text-5xl text-black text-center max-[500px]:text-2xl max-[500px]:w-full\">\r\n        Why are we the Best?\r\n      </h1>\r\n\r\n      {/* Cards */}\r\n      <div className=\"grid grid-cols-3 max-[900px]:grid-cols-2 max-[550px]:grid-cols-1 gap-10 m-auto my-10\">\r\n        {CardsData.map((element, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"p-[10%] \tbg-white shadow-md rounded-md group\"\r\n            >\r\n              {/* Images */}\r\n              <div className=\" w-[20%] max-[900px]:m-auto max-[900px]:mb-10 mb-8 items-center  text-5xl  group-hover:scale-110 transition-transform \">\r\n                {element?.image}\r\n              </div>\r\n              {/* Text */}\r\n              <div className=\"relative max-[900px]:text-center \">\r\n                <h6 className=\"absolute -top-[22px] w-full font-bold text-sm\">\r\n                  {element.title}\r\n                </h6>\r\n\r\n                <p className=\"bottom-0 text-body pt-2 w-full text-sm\">\r\n                  {element.text}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModelWorking;\r\n","D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\TypingAnimation.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\constants\\Image.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\constants\\NavButtons.js",[],[],"D:\\React Native\\Rainbow-Chimera\\frontend\\src\\components\\ParticlesBackground.js",["100"],[],"import { useCallback } from \"react\";\r\nimport Particles from \"react-particles\";\r\nimport { loadSlim } from \"tsparticles-slim\";\r\n\r\nconst ParticlesBackground = () => {\r\n  const particlesInit = useCallback(async (engine) => {\r\n    console.log(engine);\r\n    await loadSlim(engine);\r\n  }, []);\r\n\r\n  const particlesLoaded = useCallback(async (container) => {\r\n    await console.log(container);\r\n  }, []);\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      loaded={particlesLoaded}\r\n      options={{\r\n        background: {\r\n          color: {\r\n            value: \"\",\r\n          },\r\n        },\r\n        fullScreen: { enable: false },\r\n        fpsLimit: 120,\r\n        interactivity: {\r\n          events: {\r\n            onClick: {\r\n              enable: true,\r\n              mode: \"push\",\r\n            },\r\n            onHover: {\r\n              enable: true,\r\n              mode: \"repulse\",\r\n            },\r\n            resize: true,\r\n          },\r\n          modes: {\r\n            push: {\r\n              quantity: 4,\r\n            },\r\n            repulse: {\r\n              distance: 200,\r\n              duration: 0.4,\r\n            },\r\n          },\r\n        },\r\n        particles: {\r\n          color: {\r\n            value: \"#FFFFFF\",\r\n            value: \"#FFFFFF\",\r\n          },\r\n          links: {\r\n            color: \"#FFFFFF\",\r\n            distance: 150,\r\n            enable: true,\r\n            opacity: 0.5,\r\n            width: 1,\r\n          },\r\n          move: {\r\n            direction: \"none\",\r\n            enable: true,\r\n            outModes: {\r\n              default: \"bounce\",\r\n            },\r\n            random: false,\r\n            speed: 5,\r\n            straight: false,\r\n          },\r\n          number: {\r\n            density: {\r\n              enable: true,\r\n              area: 1000,\r\n            },\r\n            value: 80,\r\n          },\r\n          opacity: {\r\n            value: 0.5,\r\n          },\r\n          shape: {\r\n            type: \"circle\",\r\n          },\r\n          size: {\r\n            value: { min: 1, max: 5 },\r\n          },\r\n        },\r\n        detectRetina: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticlesBackground;\r\n",{"ruleId":"101","severity":1,"message":"102","line":51,"column":17,"nodeType":"103","endLine":54,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":42,"column":13,"nodeType":"103","endLine":42,"endColumn":76},{"ruleId":"101","severity":1,"message":"102","line":54,"column":13,"nodeType":"103","endLine":54,"endColumn":77},{"ruleId":"101","severity":1,"message":"102","line":66,"column":13,"nodeType":"103","endLine":66,"endColumn":76},{"ruleId":"101","severity":1,"message":"102","line":72,"column":13,"nodeType":"103","endLine":72,"endColumn":76},{"ruleId":"101","severity":1,"message":"102","line":106,"column":13,"nodeType":"103","endLine":109,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":115,"column":13,"nodeType":"103","endLine":118,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":121,"column":13,"nodeType":"103","endLine":124,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":127,"column":13,"nodeType":"103","endLine":130,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":61,"column":19,"nodeType":"103","endLine":61,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":65,"column":21,"nodeType":"103","endLine":65,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":73,"column":21,"nodeType":"103","endLine":76,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":8,"column":10,"nodeType":"106","messageId":"107","endLine":8,"endColumn":20},{"ruleId":"104","severity":1,"message":"108","line":10,"column":9,"nodeType":"106","messageId":"107","endLine":10,"endColumn":26},{"ruleId":"104","severity":1,"message":"109","line":14,"column":9,"nodeType":"106","messageId":"107","endLine":14,"endColumn":27},{"ruleId":"104","severity":1,"message":"110","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"111","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":52,"column":13,"nodeType":"114","messageId":"115","endLine":52,"endColumn":18},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'prediction' is assigned a value but never used.","Identifier","unusedVar","'handleInputChange' is assigned a value but never used.","'handleSearchSubmit' is assigned a value but never used.","'useState' is defined but never used.","'motion' is defined but never used.","no-dupe-keys","Duplicate key 'value'.","ObjectExpression","unexpected"]